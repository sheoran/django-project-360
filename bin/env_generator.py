#!/usr/bin/env python3
import copy
import getpass
import os
import pwd
import subprocess

import yaml

BASE_DIR = os.path.abspath(os.path.dirname('{0}/../../'.format(os.path.abspath(__file__))))
ENV_TEMPLATE_FILE = '{0}/env_template.yaml'.format(BASE_DIR)
ENV_TEMPLATE_FILE_OVERRIDE = '{0}/env_template_override.yaml'.format(BASE_DIR)
ENV_FILE = '{0}/.env'.format(BASE_DIR)
SUPPORTED_DEPLOYMENT_TYPE = {'development', 'production'}
os.chdir(BASE_DIR)


def update_env_config(env_config):
    env_config = copy.deepcopy(env_config)
    assert env_config['DEPLOYMENT_TYPE'] in SUPPORTED_DEPLOYMENT_TYPE, 'Not Supported development type {0}'.format(
        SUPPORTED_DEPLOYMENT_TYPE
    )
    development_mode = False
    if env_config['DEPLOYMENT_TYPE'] == 'development':
        development_mode = True

    if env_config['COMPOSE_PROJECT_NAME'] is None:
        env_config['COMPOSE_PROJECT_NAME'] = os.path.split(BASE_DIR)[1]
    if env_config['DEVBOX_USER_NAME'] is None:
        env_config['DEVBOX_USER_NAME'] = getpass.getuser()
    if env_config['DEVBOX_USER_UID'] is None:
        env_config['DEVBOX_USER_UID'] = pwd.getpwnam(getpass.getuser()).pw_uid
    if env_config['DEVBOX_USER_GUID'] is None:
        env_config['DEVBOX_USER_GUID'] = pwd.getpwnam(getpass.getuser()).pw_gid
    if env_config['DEVBOX_DOCKERHOST_IP'] is None:
        env_config['DEVBOX_DOCKERHOST_IP'] = subprocess.getoutput("ip route get 8.8.8.8 | awk 'NR == 1 {print $NF}'")
    if env_config['DEVBOX_DOCKERHOST_PORT'] is None:
        env_config['DEVBOX_DOCKERHOST_PORT'] = subprocess.getoutput(
            "sudo lsof -i -n -P | grep dockerd | cut -d ':' -f 2 | cut -d ' ' -f 1"
        )

    if development_mode:
        if env_config['WEB_SERVICE_PORT'] is None:
            env_config['WEB_SERVICE_PORT'] = 8080
    else:
        if env_config['WEB_SERVICE_PORT'] is None:
            env_config['WEB_SERVICE_PORT'] = 80

    return env_config


def main():
    env_config = yaml.safe_load(open(ENV_TEMPLATE_FILE))
    if os.path.exists(ENV_TEMPLATE_FILE_OVERRIDE):
        env_config.update(yaml.safe_load(open(ENV_TEMPLATE_FILE_OVERRIDE)))

    env_config = update_env_config(env_config)
    with open(ENV_FILE, 'w') as f:
        f.write('# Auto-generated by env_generator\n')
        for k, v in env_config.items():
            f.write('{0}={1}\n'.format(k, v))


if __name__ == '__main__':
    main()
